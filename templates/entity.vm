package in.novopay.${entity.service}.${entity.userStory}.entity;

import java.util.Date;

import javax.persistence.Entity;
import javax.persistence.Table;
import in.novopay.actor.AbstractIntegerBaseEntity;

/***
 * 
 * @author ${entity.author}
 *
 */

@Entity
@Table(name = "${entity.table}")
public class ${entity.upperCamelCaseClassName}Entity extends AbstractIntegerBaseEntity {
	private static final long serialVersionUID = 1L;
	
#foreach ($field in $entity.fieldList)
#if( ${field.lowerCamelCaseName} != "createdOn" && ${field.lowerCamelCaseName} != "createdBy" && ${field.lowerCamelCaseName} != "updatedOn" && ${field.lowerCamelCaseName} != "updatedBy")
	private ${field.javaType} ${field.lowerCamelCaseName};
#end	
#end
#if( $StringUtils.equalsIgnoreCase(${entity.deleteMode}, "LOGICAL"))
	private boolean isDeleted;
#end

#foreach ($field in $entity.fieldList)
#if( ${field.lowerCamelCaseName} != "createdOn" && ${field.lowerCamelCaseName} != "createdBy" && ${field.lowerCamelCaseName} != "updatedOn" && ${field.lowerCamelCaseName} != "updatedBy")
	public void set${field.upperCamelCaseName}(${field.javaType} ${field.lowerCamelCaseName}){
		this.${field.lowerCamelCaseName}=${field.lowerCamelCaseName};
	}
	public ${field.javaType} get${field.upperCamelCaseName}(){
		return ${field.lowerCamelCaseName};
	}
#end
#end
#if( $StringUtils.equalsIgnoreCase(${entity.deleteMode}, "LOGICAL"))
	public boolean getIsDeleted() {
		return isDeleted;
	}
	public void setIsDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}
#end
}