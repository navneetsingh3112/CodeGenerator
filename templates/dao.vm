package in.novopay.${entity.service}.${entity.userStory}.daoservice;


import in.novopay.${entity.service}.${entity.userStory}.entity.${entity.upperCamelCaseClassName}Entity;
import in.novopay.infra.platform.exception.NovopayFatalException;
import in.novopay.infra.platform.navigation.ExecutionContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;


/***
 * 
 * @author ${entity.author}
 *
 */

@Service
public class ${entity.upperCamelCaseClassName}DAOService {

	@Autowired
	private ${entity.upperCamelCaseClassName}Repository ${entity.lowerCamelCaseClassName}Repository;
		
	@Autowired
	private ${entity.upperCamelCaseClassName}RowMapper ${entity.lowerCamelCaseClassName}Mapper;

	public ${entity.upperCamelCaseClassName}Entity save${entity.upperCamelCaseClassName}(${entity.upperCamelCaseClassName}Entity entity) {
		return ${entity.lowerCamelCaseClassName}Repository.save(entity);
	}

	public List<${entity.upperCamelCaseClassName}Entity> get${entity.upperCamelCaseClassName}List() {
		return ${entity.lowerCamelCaseClassName}Repository.findAll();
	}
	
	public List<Map<String, Object>> get${entity.upperCamelCaseClassName}PaginatedList(ExecutionContext executionContext) throws NovopayFatalException {
		List<Map<String, Object>> ${entity.lowerCamelCaseClassName}List = ${entity.lowerCamelCaseClassName}Mapper.getDetails(executionContext);
		executionContext.put("page_size", ${entity.lowerCamelCaseClassName}List.size());
		return ${entity.lowerCamelCaseClassName}List;
	}

	public Long get${entity.upperCamelCaseClassName}Count(ExecutionContext executionContext){
		return ${entity.lowerCamelCaseClassName}Mapper.getCount(executionContext);
	}
	
	public ${entity.upperCamelCaseClassName}Entity get${entity.upperCamelCaseClassName}Details(Integer id){
		return ${entity.lowerCamelCaseClassName}Repository.findOneById(id);
	}
	
	public void delete${entity.upperCamelCaseClassName}Entity (${entity.upperCamelCaseClassName}Entity entity){
		${entity.lowerCamelCaseClassName}Repository.delete(entity);
	}
	
}
