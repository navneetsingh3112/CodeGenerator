package in.novopay.${usd.service}.${usd.flatCaseName}.daoservice;


#foreach ($usdentity in $usd.entityList)    
import in.novopay.${usd.service}.${usd.flatCaseName}.entity.${usdentity.upperCamelCaseEntityName}Entity;
#end
import in.novopay.infra.platform.exception.NovopayFatalException;
import in.novopay.infra.platform.navigation.ExecutionContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;


/***
 * 
 * @author ${usd.author}
 *
 */

@Service
public class ${usd.upperCamelCaseName}DAOService {

#foreach($usdentity in $usd.entityList) 
	@Autowired
	private ${usdentity.upperCamelCaseEntityName}Repository ${usdentity.lowerCamelCaseEntityName}Repository;
	
#end
	@Autowired
	private ${usd.upperCamelCaseName}ListExtractor ${usd.lowerCamelCaseName}ListExtractor;

	@Autowired
	private ${usd.upperCamelCaseName}DetailsExtractor ${usd.lowerCamelCaseName}DetailsExtractor;

#foreach($usdentity in $usd.entityList)
	public ${usdentity.upperCamelCaseEntityName}Entity save${usdentity.upperCamelCaseEntityName}(${usdentity.upperCamelCaseEntityName}Entity entity) {
		return ${usdentity.lowerCamelCaseEntityName}Repository.save(entity);
	}
	
	public List<${usdentity.upperCamelCaseEntityName}Entity> get${usdentity.upperCamelCaseEntityName}List() {
		return ${usdentity.lowerCamelCaseEntityName}Repository.findAll();
	}
	
	public ${usdentity.upperCamelCaseEntityName}Entity get${usdentity.upperCamelCaseEntityName}Details(Integer id) {
		return ${usdentity.lowerCamelCaseEntityName}Repository.findOneById(id);
	}
	
	public void delete${usdentity.upperCamelCaseEntityName}Entity (${usdentity.upperCamelCaseEntityName}Entity entity){
		${usdentity.lowerCamelCaseEntityName}Repository.delete(entity);
	}
#if($StringUtils.equalsIgnoreCase($usd.getPrimaryEntity().entity, ${usdentity.entity} ))
	public void delete${usd.upperCamelCaseName} (Integer id){
		${usdentity.lowerCamelCaseEntityName}Repository.logicalDelete${usd.upperCamelCaseName}(id);
	}
#end	
#end
	public List<Map<String, Object>> get${usd.upperCamelCaseName}PaginatedList(ExecutionContext executionContext) throws NovopayFatalException {
		List<Map<String, Object>> ${usd.lowerCamelCaseName}List = ${usd.lowerCamelCaseName}ListExtractor.getDetails(executionContext);
		executionContext.put("page_size", ${usd.lowerCamelCaseName}List.size());
		return ${usd.lowerCamelCaseName}List;
	}

	public Long get${usd.upperCamelCaseName}Count(ExecutionContext executionContext){
		return ${usd.lowerCamelCaseName}ListExtractor.getCount(executionContext);
	}
	
	public Map<String, Object> get${usd.upperCamelCaseName}Details(ExecutionContext executionContext) {
		return ${usd.lowerCamelCaseName}DetailsExtractor.get${usd.upperCamelCaseName}Details(executionContext);
	}
}
