package in.novopay.${usd.service}.${usd.flatCaseName}.processor;

import in.novopay.${usd.service}.${usd.flatCaseName}.daoservice.${usd.upperCamelCaseName}DAOService;
import in.novopay.infra.platform.annotations.Processor;
import in.novopay.infra.platform.exception.NovopayFatalException;
import in.novopay.infra.platform.exception.NovopayNonFatalException;
import in.novopay.infra.platform.navigation.AbstractProcessor;
import in.novopay.infra.platform.navigation.ExecutionContext;
import org.springframework.beans.factory.annotation.Autowired;
import java.util.Map;

/***
 * 
 * @author ${usd.author}
 *
 */

@Processor
public class LogicalDelete${usd.upperCamelCaseName}Processor extends AbstractProcessor {

	
	@Autowired
	private ${usd.upperCamelCaseName}DAOService ${usd.lowerCamelCaseName}Service;


	@Override
	protected void process(ExecutionContext executionContext) throws NovopayFatalException, NovopayNonFatalException {
	
		Map<String, Object> detailsMap = ${usd.lowerCamelCaseName}Service.get${usd.upperCamelCaseName}Details(executionContext);
		if(detailsMap == null || detailsMap.isEmpty()){
			throw new NovopayNonFatalException("", "No records found");
		}
		String id = executionContext.getValue("id",String.class);
		Integer intId = Integer.parseInt(id);
		${usd.lowerCamelCaseName}Service.delete${usd.upperCamelCaseName}(intId);
	}
	
}	
