package in.novopay.${usd.service}.${usd.flatCaseName}.processor;

import in.novopay.${usd.service}.${usd.flatCaseName}.daoservice.${usd.upperCamelCaseName}DAOService;
import in.novopay.infra.platform.annotations.Processor;
import in.novopay.infra.platform.exception.NovopayFatalException;
import in.novopay.infra.platform.exception.NovopayNonFatalException;
import in.novopay.infra.platform.navigation.AbstractProcessor;
import in.novopay.infra.platform.navigation.ExecutionContext;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;


/***
 * 
 * @author ${usd.author}
 *
 */

@Processor
public class Get${usd.upperCamelCaseName}DetailsProcessor extends AbstractProcessor {

	@Autowired
	private ${usd.upperCamelCaseName}DAOService ${usd.lowerCamelCaseName}Service;

	@Override
	protected void process(ExecutionContext executionContext) throws NovopayFatalException, NovopayNonFatalException {
		Map<String, Object> detailsMap = ${usd.lowerCamelCaseName}Service.get${usd.upperCamelCaseName}Details(executionContext);
		detailsMap.forEach((key, value) -> {
			executionContext.put(key,value);
		});
	}
}	
