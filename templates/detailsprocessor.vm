package in.novopay.${entity.service}.${entity.userStory}.processor;

import in.novopay.${entity.service}.${entity.userStory}.daoservice.${entity.upperCamelCaseClassName}DAOService;
import in.novopay.${entity.service}.${entity.userStory}.entity.${entity.upperCamelCaseClassName}Entity;
import in.novopay.infra.platform.annotations.Processor;
import in.novopay.infra.platform.exception.NovopayFatalException;
import in.novopay.infra.platform.exception.NovopayNonFatalException;
import in.novopay.infra.platform.navigation.AbstractProcessor;
import in.novopay.infra.platform.navigation.ExecutionContext;
import org.springframework.beans.factory.annotation.Autowired;


/***
 * 
 * @author ${entity.author}
 *
 */

@Processor
public class Get${entity.upperCamelCaseClassName}DetailsProcessor extends AbstractProcessor {

	
	@Autowired
	private ${entity.upperCamelCaseClassName}DAOService ${entity.lowerCamelCaseClassName}Service;

	private ${entity.upperCamelCaseClassName}Entity ${entity.lowerCamelCaseClassName}Entity;

	@Override
	protected void process(ExecutionContext executionContext) throws NovopayFatalException, NovopayNonFatalException {
	
		String id = executionContext.getValue("id",String.class);
		Integer intId = Integer.parseInt(id);
		${entity.lowerCamelCaseClassName}Entity = ${entity.lowerCamelCaseClassName}Service.get${entity.upperCamelCaseClassName}Details(intId);
		if(${entity.lowerCamelCaseClassName}Entity == null){
			throw new NovopayNonFatalException("", "No records found");
		}
		populateResponseDetails(${entity.lowerCamelCaseClassName}Entity,executionContext);
	}
	
	private void populateResponseDetails(${entity.upperCamelCaseClassName}Entity ${entity.lowerCamelCaseClassName}Entity,ExecutionContext executionContext){
#foreach ($field in $entity.dataFieldList)
#if( ${field.javaType} == "Date")
		executionContext.put("${field.lowerSnakeCaseName}", ${entity.lowerCamelCaseClassName}Entity.get${field.upperCamelCaseName}() != null ? ""+${entity.lowerCamelCaseClassName}Entity.get${field.upperCamelCaseName}().getTime():""+${entity.lowerCamelCaseClassName}Entity.get${field.upperCamelCaseName}() );
#else
		executionContext.put("${field.lowerSnakeCaseName}", ""+${entity.lowerCamelCaseClassName}Entity.get${field.upperCamelCaseName}());
#end
#end
	}
}	
