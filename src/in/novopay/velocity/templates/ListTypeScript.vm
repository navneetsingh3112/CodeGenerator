import {Component, ViewEncapsulation} from '@angular/core';
import {Location} from "@angular/common";
import {ActivatedRoute, Router} from '@angular/router';

import {CommonHttpService} from "../../services/common-http.service";
import {CommonUtilityService} from "../../services/common-utility.service";
import {App} from "../../app.component";
import {AppConstants} from "../../app.constants";
import {BaseComponent} from "../../base-module/create/base-create.component";
import {BaseService} from "../../base-module/base.service";
import {BaseListComponent} from "../../base-module/list/base-list.component";
import {ResourceFactoryConstants} from "../../services/resource-factory.constants";

declare var jQuery:any;

@Component({
    selector: '[${entity.lowerTrainCaseClassName}-list]',
    templateUrl: './${entity.lowerTrainCaseClassName}-list.component.html',
    encapsulation: ViewEncapsulation.None,
})
export class ${entity.upperCamelCaseClassName}ListComponent extends BaseListComponent {
    constructor(private router:Router,
                private location:Location,
                private mainApp: App,
                private commonUtilityService: CommonUtilityService,
                private appConstants: AppConstants,
                private baseService: BaseService,
                private commonHttpService:CommonHttpService,
                private resourceFactoryConstants: ResourceFactoryConstants) {
        super(router, location, mainApp, commonUtilityService, appConstants,
            baseService, commonHttpService,resourceFactoryConstants);

        let searchModel = [
        #set($counter=1)
        #foreach ($field in $entity.fieldList)
            #if($field.isListElement)
            {
                id: '${counter}',
                type: '${field.lowerCamelCaseName}',
                field: '${field.apiKey}',
                value: '',
                placeholder: '${field.placeholder}',
                isSelected: false,
                isSorted: false,
                currentSortingOrder: 'DESC'
            },
            #end
            #set($counter=$counter+1)
          #end
        ];
        
        let dropDownList = [
        #set($fieldCounter=0)
        #set($dropdownCounter=1)
        #foreach ($field in $entity.fieldList)
            #if($field.isListElement)
            #if($field.searchType=="Dropdown")
            {
                id: '${dropdownCounter}',
                initialValues: [],
                options: {
                placeholder: '${field.placeholder}'
            	},
            	dataList: [
            	#if ($!{field.dataList} )
            		#foreach ($element in $field.dataList)
            		{
            		id: "${element.id}",
            		code: "${element.code}",
            		text: "${element.text}"
            		},
            		#end
        		#end
            	],
            	selectedFlag: false,
            	searchModelIndex: $fieldCounter,
            	#if (${field.populateFromMasterData})
        		populateFromMasterData: ${field.populateFromMasterData},
        		#end
        		#if (${field.masterDataType})
        		masterDataType: '${field.masterDataType}',
        		#end
        		#if (${field.masterDataSubType})
        		masterDataSubType: '${field.masterDataSubType}',
        		#end
        		#if (${field.isCodeIncludedInDisplay})
        		isCodeIncludedInDisplay: ${field.isCodeIncludedInDisplay},
        		#end
        		#if (${field.inputApi})
        		inputApi: "${field.inputApi}",
        		#end
        		#if (${field.inputApiListKey})
        		inputApiListKey: "${field.inputApiListKey}",
        		#end
        		#if (${field.inputApiDetailsKey})
        		inputApiDetailsKey: "${field.inputApiDetailsKey}",
        		#end
        		#if (${field.inputApiIdKey})
        		inputApiIdKey: "${field.inputApiIdKey}",
        		#end
        		#if (${field.inputApiCodeKey})
        		inputApiCodeKey: "${field.inputApiCodeKey}",
        		#end
        		#if (${field.inputApiValueKey})
        		inputApiValueKey: "${field.inputApiValueKey}",
        		#end
            },
            #set($dropdownCounter=$dropdownCounter+1)
            #end
            #set($fieldCounter=$fieldCounter+1)
            #end
          #end
        ];
        
        super.setComponentProperties("${entity.lowerTrainCaseClassName}",searchModel,dropDownList,"${entity.table}_list","${entity.table}_details",this.resourceFactoryConstants.constants.${entity.lowerCamelCaseClassName}.getList);
    }
    ngOnInit(): void {
        super.ngOnInit();
    }
}