import {Component, ViewEncapsulation} from '@angular/core';
import {Location} from "@angular/common";
import {ActivatedRoute, Router} from '@angular/router';

import {CommonHttpService} from "../../services/common-http.service";
import {CommonUtilityService} from "../../services/common-utility.service";
import {App} from "../../app.component";
import {AppConstants} from "../../app.constants";
import {BaseService} from "../../base-module/base.service";
import {BaseViewComponent} from "../../base-module/view/base-view.component";
import {ResourceFactoryConstants} from "../../services/resource-factory.constants";
import {DialogService} from "ng2-bootstrap-modal";
declare var jQuery:any;

@Component({
selector: '[${entity.lowerTrainCaseClassName}-view]',
templateUrl: './${entity.lowerTrainCaseClassName}-view.component.html',
encapsulation: ViewEncapsulation.None,
})
export class ${entity.upperCamelCaseClassName}ViewComponent extends BaseViewComponent {
constructor(protected location:Location,
protected mainApp: App,
protected appConstants: AppConstants,
protected commonHttpService:CommonHttpService,
protected baseService: BaseService,
protected commonUtilityService:CommonUtilityService,
protected router:Router,
protected route:ActivatedRoute,
protected resourceFactoryConstants:ResourceFactoryConstants,
protected dialogService: DialogService) {
super(location, mainApp, appConstants, commonHttpService, baseService,
commonUtilityService, router, route,dialogService);

let componentProperty : IViewComponentProperty = {
moduleName: "${entity.lowerTrainCaseClassName}",
componentIdRequestBodyKey: "${entity.fetchApiKey}",
viewComponentAPI: this.resourceFactoryConstants.constants.${entity.lowerCamelCaseClassName}.getDetails,
deleteComponentAPI: this.resourceFactoryConstants.constants.${entity.lowerCamelCaseClassName}.delete,
editComponentAPI: "/edit",
entity: {
#foreach ($field in $entity.fieldList)
"${field.lowerCamelCaseName}": {
value: '',
    #if ($field.webType.equals('Radio') || $field.webType.equals('Checkbox') || $field.webType.equals('Dropdown')|| $field.webType.equals('Multiselect'))
    apiKey: '${field.apiKey}_value',
    #else apiKey: '${field.apiKey}',
    #end
parentApiKey: '${field.parentApiKey}'
},
#end
},
parentKeyList: {
#foreach ($parent in $entity.parentApiList)
'${parent.name}' : {},
#end
}};
super.setComponentProperties(componentProperty);
}
ngOnInit(): void {
super.ngOnInit();
}
}